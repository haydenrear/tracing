version: '3.8'

services:
  opensearch-dashboard:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboard
    ports:
      - "5601:5601" # Map host port 5601 to container port 5601
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - tracing-integration
  dataprepper:
    image:  opensearchproject/data-prepper:latest
    container_name: data-prepper
    ports:
      - "4900:4900"
      - "4901:4901"
      - "4902:4902"
      - "4909:4909"
    volumes:
      - ./data-prepper-pipeline.yml:/usr/share/data-prepper/pipelines/pipelines.yaml
    networks:
      - tracing-integration
  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      plugins.security.ssl.http.enabled: false
      discovery.type: single-node
      plugins.query.datasources.encryption.masterkey: ef9d1bb9893b1462ab21c75b
      cluster.name: opensearch-cluster
      node.name: opensearch
      bootstrap.memory_lock: true
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: WowThisIsSoStupid1234*
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - tracing-integration
#  fluentd:
#    image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
#    container_name: fluentd-container
#    ports:
#      - "24224:24224"
#    volumes:
#      - ./fluentd-config.conf:/fluentd/etc/fluentd.conf
#    networks:
#      - tracing-integration
  fluentbit:
    image: fluent/fluent-bit:3.1.9
    container_name: fluentbit-container
    ports:
      - "24225:24225"
      - "8888:8888"
      - "8889:8889"
    volumes:
      - ./fluentbit-config.conf:/fluent-bit/etc/fluent-bit.conf
    networks:
      - tracing-integration
  postgres:
    image: localhost:5001/postgres-pgvector
    container_name: int-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
  pgadmin:
    image: dpage/pgadmin4:4.23
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 15432:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.8.2
    container_name: node_exporter
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro'
  collector:
    image: otel/opentelemetry-collector
    container_name: otlp-collector
    ports:
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./collector-config.yml:/etc/otelcol/config.yaml
    networks:
     - tracing-integration
  jaeger:
    image: jaegertracing/all-in-one:1.61.0
    container_name: jaeger-container
    ports:
      - 16686:16686
      - 14250:14250
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 14268:14268
      - 14269:14269
      - 9411:9411
    networks:
      - tracing-integration

networks:
  tracing-integration:
volumes:
  postgres:
  pgadmin:
  opensearch-data: